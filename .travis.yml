# timemory Travis CI file

language: python

# The apt packages here install our compiled code dependencies.
jobs:
  include:
    # ------------------------------------------------------------------------ #
    #
    #   Python3.7 / macOS
    #
    # ------------------------------------------------------------------------ #
    - os: osx
      osx_image: xcode12.2
      language: shell
      env:
        - TRAVIS_PYTHON_VERSION=3.8
        - CONDA_OS=MacOSX
        - CC=clang
        - CXX=clang++
        - CMAKE_ARGS='-DTIMEMORY_BUILD_PYTHON_HIDDEN=ON'
        - CTEST_ARGS='--force-new-ctest-process'
        - BUILD_ARGS='--quick --build-libs shared --python --cxx-standard=14'

    # ------------------------------------------------------------------------ #
    #
    #   Python 3.6 / Linux
    #
    # ------------------------------------------------------------------------ #
    # GCC 6
    - os: linux
      dist: xenial
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - build-essential
            - libpapi-dev
            - papi-tools
      env:
        - CC=gcc-6
        - CXX=g++-6
        - BUILD_TYPE=MinSizeRel
        - BUILD_ARGS='--quick --build-libs static shared --python --papi --gotcha --caliper --kokkos --stats --cxx-standard=14'
    # GCC 7
    - os: linux
      dist: bionic
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - g++-7
            - build-essential
            - libmpich-dev
            - mpich
            - libpapi-dev
            - papi-tools
            - lcov
      env:
        - CC=gcc-7
        - CXX=g++-7
        - COVERAGE=1
        - BUILD_ARGS='--build-libs shared --mpi --papi --caliper --mpip --gotcha --stats --cxx-standard=17'
    #
    # GCC 8
    - os: linux
      dist: bionic
      python: "3.6"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - build-essential
            - libopenmpi-dev
            - openmpi-bin
            - openmpi-common
            - libfabric-dev
      env:
        - CC=gcc-8
        - CXX=g++-8
        - BUILD_ARGS='--build-libs static --mpi --cxx-standard=17'
    # Clang 6.0
    - os: linux
      dist: xenial
      python: "3.6"
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - clang++-6.0
            - build-essential
      env:
        - CC=clang-6.0
        - CXX=clang++-6.0
        - BUILD_ARGS='--quick --build-libs static --kokkos --stats --tools --cxx-standard=14'
    # Clang 7
    - os: linux
      dist: bionic
      python: "3.6"
      addons:
        apt:
          packages:
            - clang-7
            - clang++-7
            - build-essential
            - libopenmpi-dev
            - openmpi-bin
            - openmpi-common
            - libfabric-dev
            - libpapi-dev
            - papi-tools
      env:
        - CC=clang-7
        - CXX=clang++-7
        - BUILD_ARGS='--quick --build-libs static --caliper --mpi --papi --ompt --stats --tools --cxx-standard=14'
    # ------------------------------------------------------------------------ #
    #
    #   Python 3.7 / Linux
    #
    # ------------------------------------------------------------------------ #
    # GCC 6
    - os: linux
      dist: xenial
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-6
            - g++-6
            - build-essential
            - libmpich-dev
            - mpich
            - libpapi-dev
            - papi-tools
      env:
        - CC=gcc-6
        - CXX=g++-6
        - BUILD_TYPE=MinSizeRel
        - BUILD_ARGS='--build-libs shared --papi --gotcha --python --kokkos --stats --ipo --cxx-standard=14'
    # GCC 7
    - os: linux
      dist: bionic
      python: "3.7"
      addons:
        apt:
          packages:
            - gcc
            - g++
            - build-essential
            - libopenmpi-dev
            - openmpi-bin
            - openmpi-common
            - libfabric-dev
            - libpapi-dev
            - papi-tools
      env:
        - CC=gcc
        - CXX=g++
        - BUILD_TYPE=Debug
        - BUILD_ARGS='--quick --build-libs static --papi --mpi --ompt --cxx-standard=14'
    #
    # GCC 8
    - os: linux
      dist: bionic
      python: "3.7"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-8
            - g++-8
            - build-essential
            - libmpich-dev
            - mpich
            - graphviz
            - libtbb-dev
      env:
        - CC=gcc-8
        - CXX=g++-8
        - BUILD_TYPE=Release
        - BUILD_ARGS='--build-libs shared --mpi --python --stats --cxx-standard=17 --ipo --extra-optimizations'
    # Clang 6.0
    - os: linux
      dist: xenial
      python: "3.7"
      addons:
        apt:
          sources:
            - llvm-toolchain-xenial-6.0
            - ubuntu-toolchain-r-test
          packages:
            - clang-6.0
            - clang++-6.0
            - build-essential
            - libmpich-dev
            - mpich
            - libpapi-dev
            - papi-tools
            - graphviz
            - libgoogle-perftools-dev
            - google-perftools
      env:
        - CC=clang-6.0
        - CXX=clang++-6.0
        - PROFILE=1
        - BUILD_ARGS='--build-libs shared --gperftools --mpi --papi --mpip --stats --tools --cxx-standard=14'
        - CMAKE_ARGS='-DTIMEMORY_USE_PYTHON=OFF'
    # Clang 7
    - os: linux
      dist: bionic
      python: "3.7"
      addons:
        apt:
          packages:
            - clang-7
            - clang++-7
            - build-essential
            - libmpich-dev
            - mpich
      env:
        - CC=clang-7
        - CXX=clang++-7
        - BUILD_ARGS='--quick --build-libs shared --gotcha --caliper --mpi --python --stats --tools --cxx-standard=14'

    # ------------------------------------------------------------------------ #

before_install:
  - if [ -z "${CONDA_OS}" ]; then CONDA_OS=Linux; fi
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-${CONDA_OS}-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - export PATH="${HOME}/miniconda/bin:${PATH}"
  - conda config --set always_yes yes --set changeps1 no

install:
  - env
  - conda create -c defaults -c conda-forge -n pyctest python=${TRAVIS_PYTHON_VERSION} pyctest scikit-build cmake numpy matplotlib pillow pip cython
  - source activate pyctest
  - if [ -n "$(which mpicc)" ]; then python -m pip install mpi4py; fi

script:
  - export ARGS="-SF --pyctest-model=Continuous --pyctest-site=Travis ${BUILD_ARGS}"
  - if [ -z "${BUILD_TYPE}" ]; then BUILD_TYPE=RelWithDebInfo ; fi
  - if [ -n "${COVERAGE}" ]; then ARGS="${ARGS} --coverage"; fi
  - if [ -n "${PROFILE}" ]; then ARGS="${ARGS} --profile=cpu"; fi
  - export CTEST_ARGS="-V --output-on-failure ${CTEST_ARGS}"
  - export CMAKE_ARGS="-DCMAKE_INSTALL_PREFIX=${HOME}/timemory-install ${CMAKE_ARGS}"
  - export PYCTEST_ARGS="-cc ${CC} -cxx ${CXX} --pyctest-build-type=${BUILD_TYPE} -j 1 ${ARGS}"
  - travis_wait 85 python ./pyctest-runner.py ${PYCTEST_ARGS} --  ${CTEST_ARGS} -- ${CMAKE_ARGS}
  - if [ "${CONDA_OS}" = "Linux" ]; then cd build-timemory/Linux; else cd build-timemory/Darwin; fi
  - make install -j
  - if [ -f "tests/test-python-install-import.cmake" ]; then
    cmake -P tests/test-python-install-import.cmake;
    cd;
    export PYTHON_PATH=${HOME}/timemory-install/lib/python${TRAVIS_PYTHON_VERSION}/site-packages:${PYTHONPATH};
    python${TRAVIS_PYTHON_VERSION} -c "import timemory";
    fi

after_success:
  - echo "Testing is Done"
