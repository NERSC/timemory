#!/bin/bash -e
#
# NOTE: The attach mode may not work if system permissions are disabled.
#
source $(dirname $(basename ${BASH_SOURCE[0]}))/common.sh

TEST_NAME=$(basename ${BASH_SOURCE[0]})

export TIMEMORY_OUTPUT_PATH=@CMAKE_CURRENT_BINARY_DIR@/timemory-${TEST_NAME}-output
export TIMEMORY_OUTPUT_PREFIX="attach-process-"
export TIMEMORY_TEXT_OUTPUT=ON
export TIMEMORY_FILE_OUTPUT=ON
export TIMEMORY_AUTO_OUTPUT=ON
export TIMEMORY_TREE_OUTPUT=OFF
export TIMEMORY_JSON_OUTPUT=OFF
export TIMEMORY_COUT_OUTPUT=ON

rm -rf ${TIMEMORY_OUTPUT_PATH}

# add path to libtimemory to LD_LIBRARY_PATH
export LD_LIBRARY_PATH=@PROJECT_BINARY_DIR@:${LD_LIBRARY_PATH}

# launch and grab PID
@COMMAND@ & PID=$!

# attach via @PROJECT_BINARY_DIR@/timemory-run
@PROJECT_BINARY_DIR@/timemory-run --pid ${PID} -v 3 -- @COMMAND@

WALL_FILE="${TIMEMORY_OUTPUT_PATH}/${TIMEMORY_OUTPUT_PREFIX}-wall.txt"

if [ ! -f "${WALL_FILE}" ]; then
    echo -e "Missing wall-clock output file: \"${WALL_FILE}\""
    echo -e "File in ${TIMEMORY_OUTPUT_PATH}:\n$(ls ${TIMEMORY_OUTPUT_PATH})"
    exit 1
else
    NWALL=$(count-lines ${WALL_FILE})
    if [ "${NWALL}" -eq 0 ]; then
        echo -e "\nWall-clock results from \"${WALL_FILE}\" were empty:\n"
        echo -e "$(cat ${WALL_FILE} | grep '>>>')"
        exit 1
    fi
fi
