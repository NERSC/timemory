#!/bin/bash -e
#
# NOTE: remove '--mpi --mpip' after @PROJECT_BINARY_DIR@/timemory-run if application built without MPI
#
source $(dirname $(basename ${BASH_SOURCE[0]}))/common.sh

TEST_NAME=$(basename ${BASH_SOURCE[0]})

export TIMEMORY_OUTPUT_PATH=@CMAKE_CURRENT_BINARY_DIR@/timemory-${TEST_NAME}-output
export TIMEMORY_TEXT_OUTPUT=ON
export TIMEMORY_FILE_OUTPUT=ON
export TIMEMORY_AUTO_OUTPUT=ON
export TIMEMORY_TREE_OUTPUT=OFF
export TIMEMORY_JSON_OUTPUT=OFF
export TIMEMORY_COUT_OUTPUT=ON
export TIMEMORY_FLAMEGRAPH_OUTPUT=OFF

rm -rf ${TIMEMORY_OUTPUT_PATH}

export TIMEMORY_OUTPUT_PREFIX="orig"

# add path to libtimemory to LD_LIBRARY_PATH
export LD_LIBRARY_PATH=@PROJECT_BINARY_DIR@:${LD_LIBRARY_PATH}

# no instrumentation
@MPIEXEC_EXECUTABLE@ -n 2 @COMMAND@

ORIG_WALL_FILE="${TIMEMORY_OUTPUT_PATH}/${TIMEMORY_OUTPUT_PREFIX}-wall.txt"

export TIMEMORY_OUTPUT_PREFIX="mpip"

# add mpi and mpip instrumentation
@PROJECT_BINARY_DIR@/timemory-run --mpip -o @COMMAND@.inst -I 'agasdf' -- @COMMAND@

# run the application
@MPIEXEC_EXECUTABLE@ -n 2 @LAUNCH@ @COMMAND@.inst

if [ -f "${ORIG_WALL_FILE}" ]; then
    NORIG=$(count-lines ${TIMEMORY_OUTPUT_PATH}/orig-*.txt)
    CORIG=$(cat ${TIMEMORY_OUTPUT_PATH}/orig-*.txt | grep '>>>')
else
    NORIG=0
    CORIG=""
fi

NMPIP=$(count-lines ${TIMEMORY_OUTPUT_PATH}/mpip-*.txt)
CMPIP=$(cat ${TIMEMORY_OUTPUT_PATH}/mpip-*.txt | grep '>>>')

if [ "${NMPIP}" -le "${NORIG}" ]; then
    echo -e "ORIG output line count: ${NORIG}"
    echo -e "MPIP output line count: ${NMPIP}"
    echo -e "MPIP should be > ORIG"
    echo -e "\nORIG:\n"
    echo -e "${CORIG}"
    echo -e "\nMPIP:\n"
    echo -e "${CMPIP}"
    exit 1
fi

NALLR=$(cat ${TIMEMORY_OUTPUT_PATH}/mpip-*.txt | grep MPI_Allreduce | wc -l)

if [ "${NALLR}" -eq 0 ]; then
    echo -e "\nMPIP results did not contain MPI_Allreduce!:\n"
    echo -e "$(cat ${TIMEMORY_OUTPUT_PATH}/mpip-*.txt | grep '>>>')"
    exit 1
fi
